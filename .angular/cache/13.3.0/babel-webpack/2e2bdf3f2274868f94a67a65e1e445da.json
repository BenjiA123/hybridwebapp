{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nexport class ConfigForms {\n  email(required = true, value = '') {\n    return new FormControl(value, Validators.compose([...(required ? [Validators.required] : []), Validators.pattern(configPatterns.email)]));\n  }\n\n  name(required = true, minLength = 2, value = '') {\n    return new FormControl(value, Validators.compose([...(required ? [Validators.required] : []), Validators.minLength(minLength), Validators.pattern(configPatterns.name)]));\n  }\n\n  boolean(required = false, value = false) {\n    return new FormControl(value, required ? [Validators.required] : []);\n  }\n\n  username(required = true, minLength = 3, maxLength = 10, value = '') {\n    return new FormControl(value, [...(required ? [Validators.required] : []), Validators.minLength(minLength), Validators.maxLength(maxLength), Validators.pattern(configPatterns.username)]);\n  }\n\n  default(value, validatorOrOpts, asyncValidator) {\n    return new FormControl(value, validatorOrOpts, asyncValidator);\n  }\n\n  number(required = false, value = null, maxLength = 100000) {\n    return new FormControl(value, [...(required ? [Validators.required] : []), Validators.pattern(configPatterns.number), Validators.maxLength(maxLength)]);\n  }\n\n  integer(required = true, value = null, maxLength = 100000) {\n    return new FormControl(value, [...(required ? [Validators.required] : []), Validators.pattern(configPatterns.integer), Validators.maxLength(maxLength)]);\n  }\n\n  phone(required = true, value = '') {\n    return new FormControl(value, [...(required ? [Validators.required] : []), Validators.minLength(11), Validators.pattern(configPatterns.phone)]);\n  }\n\n  requiredMinLength(length, value = '') {\n    return new FormControl(value, [Validators.required, Validators.minLength(length)]);\n  }\n\n  requiredMinMaxLength(min, max) {\n    return new FormControl('', [Validators.required, Validators.minLength(min), Validators.maxLength(max)]);\n  }\n\n  required(value = null) {\n    return new FormControl(value, Validators.required);\n  }\n\n  minLength(length = 3, value = '') {\n    return new FormControl(value, [Validators.minLength(length), Validators.required]);\n  }\n\n}\nexport const configForms = new ConfigForms();\nexport const configPatterns = {\n  email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/,\n  integer: /^[0-9]+$/,\n  name: /^[a-zA-Z0-9- ]+$/,\n  number: /^-?[0-9,\\.]+$/,\n  phone: /^[+]*[0-9]+$/,\n  postal: /^([0-9]{5})([\\-]{1}[0-9]{4})?$|^([0-9]{6})?$/,\n  url: /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/,\n  username: /^[a-zA-Z0-9-]+$/\n};","map":{"version":3,"sources":["C:/Users/ObiTech Enterprise/Desktop/coding/work/Beta/frontEndApp/src/app/util/form.class.ts"],"names":["FormControl","Validators","ConfigForms","email","required","value","compose","pattern","configPatterns","name","minLength","boolean","username","maxLength","default","validatorOrOpts","asyncValidator","number","integer","phone","requiredMinLength","length","requiredMinMaxLength","min","max","configForms","postal","url"],"mappings":"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","sourcesContent":["import { FormControl, Validators, } from '@angular/forms';\r\nexport class ConfigForms {\r\n    email(required = true, value = '') {\r\n        return new FormControl(value, Validators.compose([\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.pattern(configPatterns.email),\r\n        ]));\r\n    }\r\n    name(required = true, minLength = 2, value = '') {\r\n        return new FormControl(value, Validators.compose([\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.minLength(minLength),\r\n            Validators.pattern(configPatterns.name),\r\n        ]));\r\n    }\r\n    boolean(required = false, value = false) {\r\n        return new FormControl(value, required ? [Validators.required] : []);\r\n    }\r\n    username(required = true, minLength = 3, maxLength = 10, value = '') {\r\n        return new FormControl(value, [\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.minLength(minLength),\r\n            Validators.maxLength(maxLength),\r\n            Validators.pattern(configPatterns.username),\r\n        ]);\r\n    }\r\n    default(value, validatorOrOpts, asyncValidator) {\r\n        return new FormControl(value, validatorOrOpts, asyncValidator);\r\n    }\r\n    number(required = false, value = null, maxLength = 100000) {\r\n        return new FormControl(value, [\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.pattern(configPatterns.number),\r\n            Validators.maxLength(maxLength),\r\n        ]);\r\n    }\r\n    integer(required = true, value = null, maxLength = 100000) {\r\n        return new FormControl(value, [\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.pattern(configPatterns.integer),\r\n            Validators.maxLength(maxLength),\r\n        ]);\r\n    }\r\n    phone(required = true, value = '') {\r\n        return new FormControl(value, [\r\n            ...(required ? [Validators.required] : []),\r\n            Validators.minLength(11),\r\n            Validators.pattern(configPatterns.phone),\r\n        ]);\r\n    }\r\n    requiredMinLength(length, value = '') {\r\n        return new FormControl(value, [\r\n            Validators.required,\r\n            Validators.minLength(length),\r\n        ]);\r\n    }\r\n    requiredMinMaxLength(min, max) {\r\n        return new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(min),\r\n            Validators.maxLength(max),\r\n        ]);\r\n    }\r\n    required(value = null) {\r\n        return new FormControl(value, Validators.required);\r\n    }\r\n    minLength(length = 3, value = '') {\r\n        return new FormControl(value, [\r\n            Validators.minLength(length),\r\n            Validators.required,\r\n        ]);\r\n    }\r\n}\r\nexport const configForms = new ConfigForms();\r\nexport const configPatterns = {\r\n    email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/,\r\n    integer: /^[0-9]+$/,\r\n    name: /^[a-zA-Z0-9- ]+$/,\r\n    number: /^-?[0-9,\\.]+$/,\r\n    phone: /^[+]*[0-9]+$/,\r\n    postal: /^([0-9]{5})([\\-]{1}[0-9]{4})?$|^([0-9]{6})?$/,\r\n    url: /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/,\r\n    username: /^[a-zA-Z0-9-]+$/,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}